DOMAINS
  кто = а;б;в                  %имена трех участников
  тип = сорореанец;норореанец;мидрореанец                   %типы участников
  инструмент = использует_счеты; считает_на_пальцах
  
  структура_гипотезы = кто_тип(кто, тип); кто_инструмент(кто, инструмент)
  гипотеза = структура_гипотезы*
  
  номера = integer*
PREDICATES              
  nondeterm входит_в(структура_гипотезы, гипотеза)
  
  nondeterm возможный_тип(тип)
  nondeterm возможный_инструмент(инструмент)
  
  nondeterm генерация_гипотезы(гипотеза)
  nondeterm проверка_гипотезы(гипотеза)
  
  nondeterm проверка_высказывания(кто, integer, гипотеза)
  nondeterm номера_высказываний(кто, номера)
  
  nondeterm проверка(кто, номера, гипотеза)
  
  
CLAUSES
    входит_в(Элемент, [Элемент|_Хвост]).
    входит_в(Элемент, [_Голова|Хвост]):-
      входит_в(Элемент, Хвост).
      
    возможный_тип(сорореанец).
    возможный_тип(норореанец).
    возможный_тип(мидрореанец).
    
    возможный_инструмент(использует_счеты).
    возможный_инструмент(считает_на_пальцах).
    
    проверка_высказывания(а, 1, Гипотеза):-
      входит_в(кто_инструмент(в, считает_на_пальцах), Гипотеза).
    проверка_высказывания(а, 2, Гипотеза):-
      входит_в(кто_инструмент(б, использует_счеты), Гипотеза).
    проверка_высказывания(а, 3, Гипотеза):-
      NOT(входит_в(кто_тип(а, норореанец), Гипотеза)).
      
    проверка_высказывания(б, 1, Гипотеза):-
      NOT(входит_в(кто_инструмент(б, использует_счеты), Гипотеза)).
    проверка_высказывания(б, 2, Гипотеза):-
      входит_в(кто_тип(б, мидрореанец), Гипотеза).
      
    проверка_высказывания(в, 1, Гипотеза):-
      NOT(проверка_высказывания(а, 1, Гипотеза)).
    проверка_высказывания(в, 2, Гипотеза):-
      входит_в(кто_тип(в, сорореанец), Гипотеза).
      
    номера_высказываний(а, [1,2,3]).
    номера_высказываний(б, [1,2]).
    номера_высказываний(в, [1,2]).
      
    генерация_гипотезы([
        кто_тип(а, А), 
       кто_тип(б, Б), 
        кто_тип(в, В),
        кто_инструмент(а, ИнструментА), 
       кто_инструмент(б, ИнструментБ), 
        кто_инструмент(в, ИнструментВ)
    ]):-
      возможный_тип(А),
      возможный_тип(Б),
      возможный_тип(В),
      NOT(А = Б), NOT(А = В), NOT(Б = В),
      
      возможный_инструмент(ИнструментА),
      возможный_инструмент(ИнструментБ),
      возможный_инструмент(ИнструментВ).
      
    проверка(_, [], _).
    
    проверка(Кто, [ПервыйНомер|ОстальныеНомера], Гипотеза):-
      входит_в(кто_тип(Кто, сорореанец), Гипотеза), % проверка сорореанца
      проверка_высказывания(Кто, ПервыйНомер, Гипотеза),
      проверка(Кто, ОстальныеНомера, Гипотеза).
      
    проверка(Кто, [ПервыйНомер|ОстальныеНомера], Гипотеза):-
      входит_в(кто_тип(Кто, норореанец), Гипотеза),
      NOT(проверка_высказывания(Кто, ПервыйНомер, Гипотеза)),
      проверка(Кто, ОстальныеНомера, Гипотеза).
    
    % проверка мидрореанца
    проверка(Кто, [_], Гипотеза):-
      входит_в(кто_тип(Кто, мидрореанец), Гипотеза).
    проверка(Кто, [ПервыйНомер,ВторойНомер|ОстальныеНомера], Гипотеза):-
      входит_в(кто_тип(Кто, мидрореанец), Гипотеза),
      проверка_высказывания(Кто, ПервыйНомер, Гипотеза),
      NOT(проверка_высказывания(Кто, ВторойНомер, Гипотеза)),
      проверка(Кто, [ВторойНомер|ОстальныеНомера], Гипотеза).
    проверка(Кто, [ПервыйНомер,ВторойНомер|ОстальныеНомера], Гипотеза):-
      входит_в(кто_тип(Кто, мидрореанец), Гипотеза),
      NOT(проверка_высказывания(Кто, ПервыйНомер, Гипотеза)),
      проверка_высказывания(Кто, ВторойНомер, Гипотеза),
      проверка(Кто, [ВторойНомер|ОстальныеНомера], Гипотеза).
      
    проверка_гипотезы(Гипотеза):-
      номера_высказываний(а, НомераА), % например Номера = [1,2]
      номера_высказываний(б, НомераБ),
      номера_высказываний(в, НомераВ),
      
      проверка(а, НомераА, Гипотеза),
      проверка(б, НомераБ, Гипотеза),
      проверка(в, НомераВ, Гипотеза).
GOAL
    генерация_гипотезы(Гипотеза),
    проверка_гипотезы(Гипотеза).